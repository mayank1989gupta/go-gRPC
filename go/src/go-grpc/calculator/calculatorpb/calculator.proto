//standard proto file
syntax = "proto3";

package calculator;
option go_package = "calculatorpb";

message SumRequest {
    int32 first_Number = 1;
    int32 second_Number = 2;
}

message SumResponse {
    int32 sum_Result = 1;
}

message SubstractRequest {
    int32 first_Number = 1;
    int32 second_Number = 2;
}

message SubstractResponse {
    int32 substract_Result = 1;
}

message PrimeNumberDecompositionRequest {
    int64 number = 1;
}

message PrimeNumberDecompositionResponse {
    int64 prime_factor = 1;
}

message ComputeAverageRequest {
    int32 number = 1;
}

message ComputeAverageResponse {
    double result = 1; 
}

message FindMaximumRequest {
    int32 number = 1;
}

message FindMaximumResponse {
    int32 maximum = 1;
}

message SquareRootRequest {
    int32 number = 1;
}

message SquareRootResponse {
    double result = 1;
}

service CalculatorService {
    //Unary Func
    rpc Sum (SumRequest) returns (SumResponse) {};
    rpc Substract(SubstractRequest) returns (SubstractResponse) {};
    // Server Streming
    rpc PrimeNumberDecomposition (PrimeNumberDecompositionRequest) returns (stream PrimeNumberDecompositionResponse) {};

    //Client Streaming
    rpc ComputeAverage (stream ComputeAverageRequest) returns (ComputeAverageResponse) {};

    //Bi Directional Streaming
    rpc  FindMaximum (stream FindMaximumRequest) returns (stream FindMaximumResponse) {};
    
    //Unary Func to find Square Root - This RPC will throw error if number is negative
    //Error sent would be of type -> INVALID_ARGUMENT
    rpc SquareRoot (SquareRootRequest) returns (SquareRootResponse) {};
}